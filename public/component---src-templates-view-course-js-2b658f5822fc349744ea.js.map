{"version":3,"sources":["webpack:///./src/templates/view-course.js"],"names":["CourseView","data","location","useState","primaryBooking","setPrimaryBooking","modalVisible","setModalVisibility","stripeProduct","setStripeProduct","bookingId","setBookingId","course","strapiCourses","courseSEO","seo","defaultSEO","name","summary","href","courseBookings","allStrapiCourseBookings","edges","onlineCourse","online_only","useEffect","locationArray","split","requestQuery","length","forEach","node","strapiId","toString","prepareModal","title","description","canonicalHref","canonical_href","ogImage","image","absolutePath","ogType","og_type","ogUrl","og_url","schema","schema_json_string","header_image","childImageSharp","fluid","imageDescription","header_image_description","skillLevel","skill_level","teachingTime","teaching_time","topic","course_topic","defaultVideo","strapiHomepage","video_link","defaultImage","imageSharp","video","youtube_video","className","source","details","agenda_days","map","agendaDay","index","key","id","event","type","overview","to","filter","booking","Moment","start_date","isAfter","createBookingDates","teaching_period","discount_percentage","discount","color","text","price","booking_price","address_full","styles","onClick","stripe_product","teachingPeriods","fullAddress","shortAddress","address_short","thinkific_training","course_price","link","course_link","reviews","review","continue_reading_link","continue_reading_source","review_full","review_summary","reviewer_location","reviewer_name","closeFn","clearAllBodyScrollLocks","pageQuery"],"mappings":"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","file":"component---src-templates-view-course-js-2b658f5822fc349744ea.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Moment from \"moment\"\nimport PropTypes from \"prop-types\"\nimport ReactMarkdown from \"react-markdown\"\nimport { Link, graphql } from \"gatsby\"\nimport { clearAllBodyScrollLocks } from \"body-scroll-lock\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport SignOffStillLooking from \"../components/SignOffStillLooking\"\nimport { createBookingDates, defaultSEO } from \"../utilities\"\nimport { Button } from \"../components/Button\"\nimport { HeaderViewCourse } from \"../components/Layout/Headers\"\nimport { HealthcareProfessionalsOnly } from \"../components/Modal\"\nimport {\n  AgendaItem,\n  OnlineBooking,\n  PrimaryBooking,\n  RequestNearYou,\n  Review,\n  CoursePrices,\n  Tag,\n} from \"../components/Courses\"\n\nconst CourseView = ({ data, location }) => {\n  const [primaryBooking, setPrimaryBooking] = useState()\n  const [modalVisible, setModalVisibility] = useState(false)\n  const [stripeProduct, setStripeProduct] = useState(\"\")\n  const [bookingId, setBookingId] = useState()\n\n  const course = data.strapiCourses\n  const courseSEO = course.seo\n    ? course.seo\n    : defaultSEO(course.name, course.summary, location.href)\n  const courseBookings = data.allStrapiCourseBookings.edges\n  const onlineCourse = course.online_only ? true : false\n\n  useEffect(() => {\n    if (location.href) {\n      const locationArray = location.href.split(\"?booking=\")\n      const requestQuery = locationArray[locationArray.length - 1]\n\n      courseBookings &&\n        courseBookings.forEach(({ node }) => {\n          if (node.strapiId.toString() === requestQuery) {\n            setPrimaryBooking(node)\n          }\n        })\n    }\n  }, [courseBookings])\n\n  const prepareModal = (stripeProduct, bookingId) => {\n    setModalVisibility(true)\n    setStripeProduct(stripeProduct)\n    setBookingId(bookingId)\n  }\n\n  return (\n    <Layout>\n      <SEO\n        title={courseSEO.title}\n        description={courseSEO.description}\n        canonicalHref={courseSEO.canonical_href}\n        ogImage={courseSEO.image && courseSEO.image.absolutePath}\n        ogType={courseSEO.og_type}\n        ogUrl={courseSEO.og_url}\n        schema={courseSEO.schema_json_string}\n      />\n      <HeaderViewCourse\n        title={onlineCourse ? `${course.name} (Online)` : course.name}\n        image={\n          course.header_image ? course.header_image.childImageSharp.fluid : {}\n        }\n        imageDescription={\n          course.header_image_description ? course.header_image_description : \"\"\n        }\n        skillLevel={course.skill_level}\n        teachingTime={course.teaching_time}\n        topic={course.course_topic.name}\n        defaultVideo={data.strapiHomepage.video_link}\n        defaultImage={data.imageSharp.fluid}\n        video={course.youtube_video}\n      />\n      <main className=\"backgroundGreyLightSuper\">\n        <section className=\"wrapper courseWrapper\">\n          <section className=\"courseContent\">\n            <div className=\"content\">\n              <h2>Course details</h2>\n              <ReactMarkdown source={course.details} />\n            </div>\n            {course.agenda_days && course.agenda_days.length > 0 ? (\n              <div className={`agenda${onlineCourse ? \" onlineOnly\" : \"\"}`}>\n                <h2>Agenda</h2>\n                {course.agenda_days.map((agendaDay, index) => (\n                  <div key={agendaDay.id}>\n                    {onlineCourse ? \"\" : <h5>Day {index + 1}</h5>}\n                    {agendaDay.event.map(event => (\n                      <AgendaItem\n                        key={event.id}\n                        type={event.type}\n                        title={event.title}\n                        overview={event.overview}\n                      />\n                    ))}\n                  </div>\n                ))}\n              </div>\n            ) : (\n              \"\"\n            )}\n            {onlineCourse ? (\n              \"\"\n            ) : courseBookings && courseBookings.length > 0 ? (\n              <div className=\"bookings\">\n                <section className=\"heading\">\n                  <h2>Course bookings</h2>\n                  <Link to=\"/request-a-course\">\n                    Request this course near you\n                  </Link>\n                </section>\n                {courseBookings\n                  .filter(booking => Moment(booking.node.start_date).isAfter())\n                  .map(({ node }) => (\n                    <section className=\"booking\" key={node.id}>\n                      <div className=\"information\">\n                        <h4>\n                          <span className=\"dates\">\n                            {createBookingDates(node.teaching_period)}\n                          </span>\n                          {node.discount_percentage &&\n                          node.discount_percentage > 0 ? (\n                            <Tag\n                              discount\n                              color=\"blue\"\n                              text={node.discount_percentage}\n                            />\n                          ) : null}\n                        </h4>\n                        <p>\n                          <CoursePrices\n                            price={node.booking_price}\n                            discount={\n                              node.discount_percentage &&\n                              node.discount_percentage\n                            }\n                          />{\" \"}\n                          &bull; {node.address_full}\n                        </p>\n                      </div>\n                      <div className=\"actions\">\n                        <Button\n                          styles=\"buttonPrimary iconLeft iconArrow\"\n                          onClick={() =>\n                            prepareModal(node.stripe_product, node.strapiId)\n                          }\n                        >\n                          Book now\n                        </Button>\n                      </div>\n                    </section>\n                  ))}\n              </div>\n            ) : (\n              <div className=\"bookings\">\n                <section className=\"heading\">\n                  <h2>Course bookings</h2>\n                </section>\n                <Link className=\"booking noBookings\" to=\"/request-a-course\">\n                  <span>\n                    No bookings scheduled,{\" \"}\n                    <span>request this course to be held near you</span>\n                  </span>\n                </Link>\n              </div>\n            )}\n          </section>\n          <aside className=\"courseSidebar\">\n            {primaryBooking ? (\n              <PrimaryBooking\n                price={primaryBooking.booking_price}\n                discount={primaryBooking.discount_percentage}\n                teachingPeriods={primaryBooking.teaching_period}\n                fullAddress={primaryBooking.address_full}\n                shortAddress={primaryBooking.address_short}\n                prepareModal={() =>\n                  prepareModal(\n                    primaryBooking.stripe_product,\n                    primaryBooking.strapiId\n                  )\n                }\n              />\n            ) : onlineCourse ? (\n              <OnlineBooking\n                price={\n                  course.thinkific_training.course_price ||\n                  course.thinkific_training.course_price === 0\n                    ? course.thinkific_training.course_price\n                    : \"Free\"\n                }\n                discount={course.thinkific_training.discount_percentage}\n                link={course.thinkific_training.course_link}\n              />\n            ) : courseBookings && courseBookings.length > 0 ? (\n              \"\"\n            ) : (\n              <RequestNearYou />\n            )}\n            {course.reviews && course.reviews.length > 0\n              ? course.reviews.map(review => (\n                  <Review\n                    key={review.id}\n                    link={review.continue_reading_link}\n                    source={review.continue_reading_source}\n                    review={review.review_full}\n                    summary={review.review_summary}\n                    location={review.reviewer_location}\n                    name={review.reviewer_name}\n                  />\n                ))\n              : \"\"}\n          </aside>\n        </section>\n      </main>\n      <SignOffStillLooking />\n      {modalVisible ? (\n        <HealthcareProfessionalsOnly\n          closeFn={() => setModalVisibility(false)}\n          stripeProduct={stripeProduct}\n          location={location}\n          bookingId={bookingId}\n        />\n      ) : (\n        clearAllBodyScrollLocks()\n      )}\n    </Layout>\n  )\n}\n\nCourseView.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n}\n\nexport default CourseView\n\nexport const pageQuery = graphql`\n  query getCourse($name: String!, $strapiId: Int) {\n    strapiCourses(name: { eq: $name }) {\n      id\n      course_topic {\n        name\n      }\n      agenda_days {\n        id\n        event {\n          id\n          title\n          type\n          overview\n        }\n      }\n      reviews {\n        continue_reading_link\n        continue_reading_source\n        review_full\n        review_summary\n        reviewer_location\n        reviewer_name\n        id\n      }\n      thinkific_training {\n        id\n        course_link\n        course_duration\n        course_name\n        course_price\n        discount_percentage\n      }\n      teaching_time\n      skill_level\n      name\n      summary\n      details\n      online_only\n      youtube_video\n      header_image_description\n      header_image {\n        childImageSharp {\n          fluid(maxWidth: 1600) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      seo {\n        canonical_href\n        description\n        id\n        og_type\n        og_url\n        title\n        image {\n          absolutePath\n        }\n        schema_json_string\n      }\n    }\n    allStrapiCourseBookings(\n      filter: { course: { id: { eq: $strapiId } } }\n      sort: { fields: start_date, order: ASC }\n    ) {\n      edges {\n        node {\n          strapiId\n          address_full\n          address_short\n          booking_price\n          stripe_product\n          discount_percentage\n          teaching_period {\n            end\n            id\n          }\n          updated_at\n          start_date\n        }\n      }\n    }\n    strapiHomepage {\n      video_link\n    }\n    imageSharp(fluid: { originalName: { eq: \"default-image.jpg\" } }) {\n      fluid {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n"],"sourceRoot":""}